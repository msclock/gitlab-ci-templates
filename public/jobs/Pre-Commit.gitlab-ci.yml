# This presents a pre_commit job for powsering lint codebase.
# see https://github.com/pre-commit/pre-commit.
#
# By default, the template assumes that pipelines are being used for merge requests.
# If pipelines are not used for merge requests (branch pipelines only), unset
# `PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH` and set `PRE_COMMIT_AUTO_FIX_BRANCH_ONLY`.

# @Description pre-commit template
pre_commit:
  extends:
    - .make_changes
  stage: lint
  rules:
    - if: $PRE_COMMIT_SKIP_BRANCH_PIPELINE && $CI_COMMIT_BRANCH
      when: never
    - if: |
        $PRE_COMMIT_SKIP_MR_PIPELINE &&
        $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: |
        $PRE_COMMIT_AUTO_FIX_BRANCH_ONLY &&
        $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        PRE_COMMIT_AUTO_FIX: ''
      when: on_success
      exists:
        - .pre-commit-config.yaml
    - if: |
        $PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH == "true" &&
        $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: |
        $PRE_COMMIT_AUTO_FIX_MR_ONLY &&
        $CI_PIPELINE_SOURCE != "merge_request_event"
      variables:
        PRE_COMMIT_AUTO_FIX: ''
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - if: |
        $CI_PIPELINE_SOURCE == "merge_request_event" &&
        $CI_MERGE_REQUEST_EVENT_TYPE != "detached"
      # don't support autofix for merged_result or merge_train pipelines, configure branch fixing instead
      variables:
        PRE_COMMIT_AUTO_FIX: ''
      exists:
        - .pre-commit-config.yaml
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - if: $CI_COMMIT_BRANCH
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - when: never
  variables:
    # Specifies whether to apply, commit, and push autofixes to the source branch
    PRE_COMMIT_AUTO_FIX: '1'
    # This prevents duplicating the pre-commit job on branch and MR pipelines. If an
    # MR is open, the job will only run in the MR pipeline.This assumes the project
    # is using [Merge request pipelines](https://gitlab.com/ee/ci/pipelines/merge_request_pipelines.html).
    # To disable, set this to any other value than the string `"true"`.
    PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH: 'true'
    # If set to a non-empty value, this disables PRE_COMMIT_AUTOFIX for non-branch pipelines.
    PRE_COMMIT_AUTO_FIX_BRANCH_ONLY: ''
    # If set to a non-empty value, this disables PRE_COMMIT_AUTOFIX for non-MR pipelines.
    PRE_COMMIT_AUTO_FIX_MR_ONLY: ''
    # If set to a non-empty value, this disables the job for merge request pipelines
    PRE_COMMIT_SKIP_MR_PIPELINE: ''
    # If set to a non-empty value, this disables the job for branch pipelines
    PRE_COMMIT_SKIP_BRANCH_PIPELINE: ''
    # The message to include in the commit message.
    MAKE_CHANGES_MSG: 'style\(ci\): auto fixes from pre-commit'
    # Controls the exit behavior of the CI job. Please refer templates/Make-Changes.gitlab-ci.yml.
    MAKE_CHANGES_FINISH: error
    # The pre-commit cache
    PRE_COMMIT_HOME: $CI_PROJECT_DIR/.cache/.pre-commit
    DETECT_CHANGES_ADD: 0
    _REAL_PRE_COMMIT_HOME: /tmp/pre-commit
  image: msclock/pre-commit:2023-11-01T18-13-58Z
  cache:
    key: pre-commit-cache
    paths:
      - $PRE_COMMIT_HOME
  script:
    - !reference [.security_check_sensible, script]
    - |
      if [[ -n "$PRE_COMMIT_AUTO_FIX_BRANCH_ONLY" && -n "$PRE_COMMIT_AUTO_FIX_MR_ONLY" ]]; then
        echo "Invalid configuration. PRE_COMMIT_AUTO_FIX_BRANCH_ONLY and PRE_COMMIT_AUTO_FIX_MR_ONLY are mutually exclusive"
        exit 1
      fi

      status=0

      if [[ -d "$PRE_COMMIT_HOME" ]]; then
        echo "Found cache at $PRE_COMMIT_HOME for pre-commit and move it to $_REAL_PRE_COMMIT_HOME"
        if [[ ! -d "$_REAL_PRE_COMMIT_HOME" ]]; then
          mkdir -p $_REAL_PRE_COMMIT_HOME
        fi
        mv $PRE_COMMIT_HOME/* $_REAL_PRE_COMMIT_HOME
      fi

      PRE_COMMIT_HOME=$_REAL_PRE_COMMIT_HOME pre-commit run --all-files || status=$?
      mkdir -p $PRE_COMMIT_HOME
      mv $_REAL_PRE_COMMIT_HOME/* $PRE_COMMIT_HOME

      if [[ $status -eq 0 ]]; then
        exit 0  # We're all good, pipeline can proceed
      fi

      _init_fail_unexpectedly=3

      if [[ $status -eq $_init_fail_unexpectedly ]]; then
        echo "pre-commit init occurred failed unexpectedly!! Please retry it again!!! See https://pre-commit.com/#command-line-interface" >> /dev/stderr
        exit 1
      fi

      if [[ -z "$PRE_COMMIT_AUTO_FIX" ]]; then
        exit $status # Fail the job with status holding exit code
      fi
    - !reference [.make_changes, script]
