.security_check_sensible:
  script: |
    if [[ "$CI_DEBUG_TRACE" == "1" ]] || [[ "$CI_DEBUG_TRACE" == "true" ]]; then
        echo "Enable CI_DEBUG_TRACE, and some sensible info will be printed.Please be careful!!!"
        set -x
    fi

# @Description make changes on codebase
.make_changes:
  variables:
    MAKE_CHANGES_MSG: ''
    MAKE_CHANGES_ON_PR: ''
    MAKE_CHANGES_EXIT: ''
  script:
    - !reference [.security_check_sensible, script]
    - |
      if [[ -n "$(git status -s)" ]]; then

        # Prepare config for git
        if [[ -n "$CI_COMMIT_BRANCH" ]]; then
            git remote set-url origin "https://gitlab-ci-token:${MAKE_CHANGES_ACCESS_TOKEN:-$CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
        fi
        if [[ -n "$CI_MERGE_REQUEST_IID" ]]; then
            git remote set-url origin "https://gitlab-ci-token:${MAKE_CHANGES_ACCESS_TOKEN:-$CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH}.git"
        fi

        git config --global user.name "GitLab Ci"
        git config --global user.email "gitlab-ci@no-reply.com"

        if [[ -n "$MAKE_CHANGES_ON_PR" ]]; then
            temp_branch=temp_black_${CI_COMMIT_SHA:0:12}
            git checkout -B "$temp_branch" --
        fi

        git add -u .
        git commit -m "${MAKE_CHANGES_MSG:-ci: automated commit changes from CI job}" -m "job url:$CI_JOB_URL"
        if [[ -n "$MAKE_CHANGES_ON_PR" ]]; then
            git push origin "$temp_branch"
            curl --header "PRIVATE-TOKEN: ${MAKE_CHANGES_ACCESS_TOKEN:-$CI_JOB_TOKEN}" \
                --request POST "$CI_SERVER_URL/api/v4/projects/$CI_PROJECT_ID/merge_requests" \
                --form "source_branch=$temp_branch" \
                --form "target_branch=$CI_COMMIT_REF_NAME" \
                --form "title=PR from $temp_branch"
        elif [[ -n "$CI_COMMIT_BRANCH" ]]; then
            git push origin HEAD:"$CI_COMMIT_BRANCH"
        elif [[ -n "$CI_MERGE_REQUEST_IID" ]]; then
            git push origin HEAD:"$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
        fi
      else
        echo "Working tree clean. Nothing to make changes.";
        exit 0
      fi

      if [[ -z "$MAKE_CHANGES_EXIT" ]]; then
          exit 0
      else
          exit 1
      fi

# @Description proxy backend based on clash
.proxy_backend:
  services:
    - name: msclock/clash:2023-08-10T04-27-58Z
      alias: proxy_backend
      entrypoint:
        - ''
      command:
        - sh
        - -c
        - set -xe && wget $CLASH_PROXY_SUB -O /root/.config/clash/config.yaml && ./clash
  variables:
    CLASH_PROXY_SUB: ''
    PROXY_WHITE_LIST: 10.0.0.0/8,192.168.0.0/16,127.0.0.1,172.16.0.0/16,$CI_SERVER_HOST
    ENABLE_PROXY: '1'
  before_script:
    - !reference [.security_check_sensible, script]
    - |
      if [[ -z "$CLASH_PROXY_SUB" ]]; then
        echo "No proxy subscribe found." >> /dev/stderr
        exit 1
      fi

      if [[ -n "$ENABLE_PROXY" ]]; then

        export HTTP_PROXY="http://proxy_backend:7890"
        export http_proxy="$HTTP_PROXY"

        export HTTPS_PROXY="$HTTP_PROXY"
        export https_proxy="$HTTP_PROXY"

        export FTP_PROXY=$HTTP_PROXY
        export ftp_proxy=$HTTP_PROXY

        export ALL_PROXY=$HTTP_PROXY
        export all_proxy=$HTTP_PROXY

        export NO_PROXY="$PROXY_WHITE_LIST"
        export no_proxy="$NO_PROXY"
        sleep 3 # wait for proxy_backend is ready
      fi

# @Description pre-commit template
.pre_commit:
  extends:
    - .make_changes
  stage: .pre
  rules:
    - if: $PRE_COMMIT_SKIP_BRANCH_PIPELINE && $CI_COMMIT_BRANCH
      when: never
    - if: $PRE_COMMIT_SKIP_MR_PIPELINE && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $PRE_COMMIT_AUTO_FIX_BRANCH_ONLY && $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        PRE_COMMIT_AUTO_FIX: ''
      when: on_success
      exists:
        - .pre-commit-config.yaml
    - if: $PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH == "true" && $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $PRE_COMMIT_AUTO_FIX_MR_ONLY && $CI_PIPELINE_SOURCE != "merge_request_event"
      variables:
        PRE_COMMIT_AUTO_FIX: ''
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE != "detached"
      variables: # don't support autofix for merged_result or merge_train pipelines, configure branch fixing instead
        PRE_COMMIT_AUTO_FIX: ''
      exists:
        - .pre-commit-config.yaml
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - if: $CI_COMMIT_BRANCH
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - when: never
  variables:
    PRE_COMMIT_AUTO_FIX: '1'
    PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH: 'true'
    MAKE_CHANGES_MSG: 'ci: auto fixes from pre-commit'
    MAKE_CHANGES_EXIT: '1'
    PRE_COMMIT_HOME: $CI_PROJECT_DIR/.cache/.pre-commit
  image: msclock/pre-commit:2023-08-10T09-27-52Z
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - $PRE_COMMIT_HOME
  script:
    - !reference [.security_check_sensible, script]
    - |
      if [[ -n "$PRE_COMMIT_AUTO_FIX_BRANCH_ONLY" && -n "$PRE_COMMIT_AUTO_FIX_MR_ONLY" ]]; then
          echo "invalid configuration. PRE_COMMIT_AUTO_FIX_BRANCH_ONLY and PRE_COMMIT_AUTO_FIX_MR_ONLY are mutually exclusive"
          exit 1
      fi

      status=0

      pre-commit run --all-files || status=$?
      if [[ $status -eq 0 ]]; then
          exit 0  # we're all good, pipeline can proceed
      fi

      _init_fail_code=3
      if [[ $status -eq $_init_fail_code ]]; then
          echo "pre-commit init plugins failed!!, please retry it again!!!"
          exit 1
      fi

      if [[ -z "$PRE_COMMIT_AUTO_FIX" ]]; then
          exit $status # fail the job with status holding exit code
      fi
    - !reference [.make_changes, script]

# @Description template of the base image of devcontainer
.devcontainer:
  image: msclock/devcontainer:2023-08-10T04-27-58Z

# @Description devcontainer build
.devcontainer::build:
  extends:
    - .devcontainer
  variables:
    IMAGE_NAME: ''
    PUSH: ''
    PLATFORM: ''
    SUB_FOLDER: ''
  script:
    - |
      set -x

      build_extra=(--workspace-folder .)
      if [ -n "$SUB_FOLDER" ]; then
          build_extra+=(--config $SUB_FOLDER)
      fi

      if [ -n "$IMAGE_NAME" ]; then
          build_extra+=(--image-name $IMAGE_NAME)
      fi

      if [ -n "$PUSH" ]; then
          build_extra+=($build_extra --push)
      fi

      if [ -n "$PLATFORM" ]; then
          build_extra+=(--platform $PLATFORM)
      fi

      # build image by devcontainer
      devcontainer build $build_extra

# @Description template of the base image of act
.act:
  image: msclock/act:2023-08-12T17-40-49Z
