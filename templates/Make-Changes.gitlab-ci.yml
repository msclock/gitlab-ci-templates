# This presents a template to make changes to codebase using the native
# gitlab restapi.
#
# To configure the template refers to the variables section.

# @Description make changes on codebase
.make_changes:
  variables:
    # Required. Allows customization of the commit message.
    MAKE_CHANGES_MSG: ''
    # Optional. Allow customization of the commit body.
    MAKE_CHANGES_MSG_BODY: ''
    # When set, creates a temporary branch and pushes the changes to it, along with creating a merge request for code review.
    MAKE_CHANGES_ON_PR: ''
    # Controls the exit behavior of the CI job. `skip`: the current pipeline will be skipped. `error`: exits code 1. Leave blank to exits 0.
    MAKE_CHANGES_FINISH: ''
    # Controls if the added files are detected as changes.
    DETECT_CHANGES_ADD: 1
  script:
    - !reference [.security_check_sensible, script]
    - !reference [.security_git_config, script]
    - |
      _detect_pattern='[^?]'
      if [[ $DETECT_CHANGES_ADD =~ ^(1|true)$ ]]; then
        _detect_pattern='.'
      fi

      if [[ -n "$(git status -s | grep -E "^"$_detect_pattern"+$")" ]]; then

        if [[ -n "$MAKE_CHANGES_ON_PR" ]]; then
          temp_branch=temp_black_${CI_COMMIT_SHA:0:12}
          git checkout -B "$temp_branch" --
        fi

        git add -u .
        _title=$(eval "echo ${MAKE_CHANGES_MSG:-ci: automated commit changes from CI job}")
        _body=$(eval "echo ${MAKE_CHANGES_MSG_BODY}")
        git commit -m "$_title" -m "$_body" -m "job url: $CI_JOB_URL"
        if [[ -n "$MAKE_CHANGES_ON_PR" ]]; then
          git push origin "$temp_branch"
          curl --header "PRIVATE-TOKEN: ${GITLAB_TOKEN:-$CI_JOB_TOKEN}" \
            --request POST "$CI_API_V4_URL/projects/$CI_PROJECT_ID/merge_requests" \
            --form "source_branch=$temp_branch" \
            --form "target_branch=$CI_COMMIT_REF_NAME" \
            --form "title=PR from $temp_branch"
        elif [[ -n "$CI_COMMIT_BRANCH" ]]; then
          git push origin HEAD:"$CI_COMMIT_BRANCH"
        elif [[ -n "$CI_MERGE_REQUEST_IID" ]]; then
          git push origin HEAD:"$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
        fi
      else
        echo "Working tree clean. Nothing to make changes.";
        exit 0
      fi

      case $MAKE_CHANGES_FINISH in
        error) exit 1 ;;
        skip)
          echo "Finish with skip the current pipeline..."
          curl --header "PRIVATE-TOKEN: ${GITLAB_TOKEN:-$CI_JOB_TOKEN}" \
            --request POST "$CI_API_V4_URL/projects/$CI_PROJECT_ID/pipelines/${CI_PIPELINE_ID}/cancel"
          ;;
        *) exit 0 ;;
      esac
