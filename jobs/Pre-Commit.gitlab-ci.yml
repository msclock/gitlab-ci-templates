include:
  - remote: https://gitlab.com/msclock/gitlab-ci-templates/-/raw/v2.3.1/templates/Rules.gitlab-ci.yml
  - remote: https://gitlab.com/msclock/gitlab-ci-templates/-/raw/v2.3.1/templates/Make-Changes.gitlab-ci.yml

# @Description pre-commit template
pre_commit:
  extends:
    - .make_changes
  stage: lint
  rules:
    - if: $PRE_COMMIT_SKIP_BRANCH_PIPELINE && $CI_COMMIT_BRANCH
      when: never
    - if: |
        $PRE_COMMIT_SKIP_MR_PIPELINE &&
        $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: |
        $PRE_COMMIT_AUTO_FIX_BRANCH_ONLY &&
        $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        PRE_COMMIT_AUTO_FIX: ''
      when: on_success
      exists:
        - .pre-commit-config.yaml
    - if: |
        $PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH == "true" &&
        $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: |
        $PRE_COMMIT_AUTO_FIX_MR_ONLY &&
        $CI_PIPELINE_SOURCE != "merge_request_event"
      variables:
        PRE_COMMIT_AUTO_FIX: ''
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - if: |
        $CI_PIPELINE_SOURCE == "merge_request_event" &&
        $CI_MERGE_REQUEST_EVENT_TYPE != "detached"
      # don't support autofix for merged_result or merge_train pipelines, configure branch fixing instead
      variables:
        PRE_COMMIT_AUTO_FIX: ''
      exists:
        - .pre-commit-config.yaml
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - if: $CI_COMMIT_BRANCH
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - when: never
  variables:
    PRE_COMMIT_AUTO_FIX: '1'
    PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH: 'true'
    MAKE_CHANGES_MSG: 'style(ci): auto fixes from pre-commit'
    MAKE_CHANGES_FINISH: error
    PRE_COMMIT_HOME: $CI_PROJECT_DIR/.cache/.pre-commit
    DETECT_CHANGES_ADD: 0
    _REAL_PRE_COMMIT_HOME: /tmp/pre-commit
  image: msclock/pre-commit:2023-09-09T11-10-11Z
  cache:
    key: pre-commit-cache
    paths:
      - $PRE_COMMIT_HOME
  script:
    - !reference [.security_check_sensible, script]
    - |
      if [[ -n "$PRE_COMMIT_AUTO_FIX_BRANCH_ONLY" && -n "$PRE_COMMIT_AUTO_FIX_MR_ONLY" ]]; then
        echo "Invalid configuration. PRE_COMMIT_AUTO_FIX_BRANCH_ONLY and PRE_COMMIT_AUTO_FIX_MR_ONLY are mutually exclusive"
        exit 1
      fi

      status=0

      if [[ -d "$PRE_COMMIT_HOME" ]]; then
        echo "Found cache at $PRE_COMMIT_HOME for pre-commit and move it to $_REAL_PRE_COMMIT_HOME"
        if [[ ! -d "$_REAL_PRE_COMMIT_HOME" ]]; then
          mkdir -p $_REAL_PRE_COMMIT_HOME
        fi
        mv $PRE_COMMIT_HOME/* $_REAL_PRE_COMMIT_HOME
      fi

      PRE_COMMIT_HOME=$_REAL_PRE_COMMIT_HOME pre-commit run --all-files || status=$?
      mkdir -p $PRE_COMMIT_HOME
      mv $_REAL_PRE_COMMIT_HOME/* $PRE_COMMIT_HOME

      if [[ $status -eq 0 ]]; then
        exit 0  # We're all good, pipeline can proceed
      fi

      _init_fail_unexpectedly=3

      if [[ $status -eq $_init_fail_unexpectedly ]]; then
        echo "pre-commit init occurred failed unexpectedly!! Please retry it again!!! See https://pre-commit.com/#command-line-interface" >> /dev/stderr
        exit 1
      fi

      if [[ -z "$PRE_COMMIT_AUTO_FIX" ]]; then
        exit $status # Fail the job with status holding exit code
      fi
    - !reference [.make_changes, script]
