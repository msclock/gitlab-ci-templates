include:
  - remote: "https://gitlab.com/gitlab-aux/gitlab-ci-templates/raw/main/templates/common.yml"

# @Description template based on pre-commit
pre-commit:
  extends:
    - .make_changes
  stage: .pre
  rules:
    - if: "$PRE_COMMIT_SKIP_BRANCH_PIPELINE && $CI_COMMIT_BRANCH"
      when: never
    - if: '$PRE_COMMIT_SKIP_MR_PIPELINE && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$PRE_COMMIT_AUTO_FIX_BRANCH_ONLY && $CI_PIPELINE_SOURCE == "merge_request_event"'
      variables:
        PRE_COMMIT_AUTO_FIX: ""
      when: on_success
      exists:
        - .pre-commit-config.yaml
    - if: '$PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH == "true" && $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$PRE_COMMIT_AUTO_FIX_MR_ONLY && $CI_PIPELINE_SOURCE != "merge_request_event"'
      variables:
        PRE_COMMIT_AUTO_FIX: ""
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE != "detached"'
      variables: # we don't support autofix for merged_result or merge_train pipelines, configure branch fixing instead
        PRE_COMMIT_AUTO_FIX: ""
      exists:
        - .pre-commit-config.yaml
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - if: "$CI_COMMIT_BRANCH"
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - when: never
  variables:
    PRE_COMMIT_AUTO_FIX: "1"
    PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH: "true"
    MAKE_CHANGES_MSG: "ci: auto fixes from pre-commit"
    MAKE_CHANGES_EXIT: "1"
    PRE_COMMIT_HOME: $CI_PROJECT_DIR/.pre-commit
  image: msclock/pre-commit:2023-08-10T09-27-52Z
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - $PRE_COMMIT_HOME
  script:
    - !reference [.security_check_sensible, script]
    - |
      if [[ -n "$PRE_COMMIT_AUTO_FIX_BRANCH_ONLY" && -n "$PRE_COMMIT_AUTO_FIX_MR_ONLY" ]]; then
          echo "invalid configuration. PRE_COMMIT_AUTO_FIX_BRANCH_ONLY and PRE_COMMIT_AUTO_FIX_MR_ONLY are mutually exclusive"
          exit 1
      fi

      status=0

      pre-commit run --all-files || status=$?
      if [[ $status -eq 0 ]]; then
          exit 0  # we're all good, pipeline can proceed
      fi

      _init_fail_code=3
      if [[ $status -eq $_init_fail_code ]]; then
          echo "pre-commit init plugins failed!!, please retry it again!!!"
          exit 1
      fi

      if [[ -z "$PRE_COMMIT_AUTO_FIX" ]]; then
          exit $status # fail the job with status holding exit code
      fi
    - !reference [.make_changes, script]
